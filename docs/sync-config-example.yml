# Example configuration for advanced-git-sync action
# This file demonstrates the correct YAML syntax for all configuration options
#
# üß† INTELLIGENT DEFAULTS: The action uses logical priority-based defaults:
# - ‚úÖ ENABLED: Branches (with historySync), Tags, Releases - core features most users want
# - ‚ùå DISABLED: Pull Requests, Issues, Comments - can be noisy, user choice
# - üîó SMART DEPENDENCIES: Automatically enables required features (e.g., tags when releases enabled)
#
# IMPORTANT: If your sync includes workflow files (.github/workflows/), you MUST use
# a Personal Access Token with 'workflow' scope as GH_TOKEN secret instead of GITHUB_TOKEN

# GitLab Configuration
# When gitlab.sync.[entity].enabled: true, entities will be synced FROM GitHub TO GitLab
gitlab:
  enabled: true
  owner: your-gitlab-username # Replace with your GitLab username
  repo: your-repo-name # Replace with your repository name (optional if same as GitHub)
  projectId: 12345 # Optional: GitLab project ID (if different from owner/repo)
  sync:
    # üî¥ CRITICAL: Foundation (enabled by default) - uncomment to customize
    branches:
      enabled: true
      protected: true # Include protected branches
      pattern: "*" # Pattern to match branch names (* = all branches)
      historySync: # Timeline merging configuration (always enabled for proper sync)
        enabled: true
        strategy: "merge-timelines" # merge-timelines | skip-diverged | force-match
        createMergeCommits: true
        mergeMessage: "Sync: Merge timeline from {source} to {target}"
      # ü§ñ Bot branch handling - control how bot-created branches are managed
      botBranches:
        strategy: "delete-orphaned" # delete-orphaned | sync | skip
        patterns: [] # Empty = use defaults, populated = override defaults entirely
        # Default patterns: dependabot/*, renovate/*, copilot/*, feature/*, fix/*, etc.

    # üü° HIGH: Core features (enabled by default) - uncomment to customize
    tags:
      enabled: true # Auto-enabled if releases are enabled
      divergentCommitStrategy: "skip" # skip | create-anyway | point-to-latest
      pattern: "*" # Pattern to match tag names
    releases:
      enabled: true # Sync releases and their assets
      divergentCommitStrategy: "skip" # skip | create-anyway
      latestReleaseStrategy: "point-to-latest" # skip | point-to-latest | create-anyway
      skipPreReleases: false # Skip pre-release versions
      pattern: "*" # Pattern to match release names
      includeAssets: true # Include release assets

    # üü† MEDIUM: Social features (disabled by default) - uncomment to enable
    # pullRequests:
    #   enabled: true # UNCOMMENT TO ENABLE - can be overwhelming
    #   autoMerge: false # Don't auto-merge synced PRs
    #   # Labels: Automatically syncs all original labels + adds 'synced' label
    #   comments: # Enhanced comment synchronization
    #     enabled: false # Enable to sync PR comments with attribution
    #     attribution:
    #       includeAuthor: true # Include original comment author
    #       includeTimestamp: true # Include sync timestamp
    #       includeSourceLink: true # Include link to original comment
    #       format: "quoted" # quoted | inline | minimal
    #     handleUpdates: true # Sync comment updates/edits
    #     preserveFormatting: true # Preserve markdown formatting
    #     syncReplies: true # Sync comment threads and replies

    # issues:
    #   enabled: true # UNCOMMENT TO ENABLE - can be very noisy
    #   # Labels: Automatically syncs all original labels + adds 'synced' label
    #   comments: # Enhanced comment synchronization
    #     enabled: false # Enable to sync issue comments with attribution
    #     attribution:
    #       includeAuthor: true # Include original comment author
    #       includeTimestamp: true # Include sync timestamp
    #       includeSourceLink: true # Include link to original comment
    #       format: "quoted" # quoted | inline | minimal
    #     handleUpdates: true # Sync comment updates/edits
    #     preserveFormatting: true # Preserve markdown formatting
    #     syncReplies: true # Sync comment threads and replies

# GitHub Configuration
# When github.sync.[entity].enabled: true, entities will be synced FROM GitLab TO GitHub
github:
  enabled: true
  # owner and repo are automatically detected from the GitHub context
  sync:
    # üî¥ CRITICAL: Foundation (enabled by default) - uncomment to customize
    branches:
      enabled: true
      protected: true # Include protected branches
      pattern: "*" # Pattern to match branch names
      historySync: # Timeline merging configuration (always enabled for proper sync)
        enabled: true
        strategy: "merge-timelines" # merge-timelines | skip-diverged | force-match
        createMergeCommits: true
        mergeMessage: "Sync: Merge timeline from {source} to {target}"
      # ü§ñ Bot branch handling - control how bot-created branches are managed
      botBranches:
        strategy: "delete-orphaned" # delete-orphaned | sync | skip
        patterns: [] # Empty = use defaults, populated = override defaults entirely
        # Default patterns: dependabot/*, renovate/*, copilot/*, feature/*, fix/*, etc.

    # üü° HIGH: Core features (enabled by default) - uncomment to customize
    tags:
      enabled: true # Auto-enabled if releases are enabled
      divergentCommitStrategy: "skip" # skip | create-anyway | point-to-latest
      pattern: "*" # Pattern to match tag names
    releases:
      enabled: true # Sync releases and their assets
      divergentCommitStrategy: "skip" # skip | create-anyway
      latestReleaseStrategy: "point-to-latest" # skip | point-to-latest | create-anyway
      skipPreReleases: false # Skip pre-release versions
      pattern: "*" # Pattern to match release names
      includeAssets: true # Include release assets


    # üü† MEDIUM: Social features (disabled by default) - uncomment to enable
    # pullRequests:
    #   enabled: true # UNCOMMENT TO ENABLE - can be overwhelming
    #   autoMerge: false # Don't auto-merge synced PRs
    #   # Labels: Automatically syncs all original labels + adds 'synced' label
    #   comments: # Enhanced comment synchronization
    #     enabled: false # Enable to sync PR comments with attribution
    #     attribution:
    #       includeAuthor: true # Include original comment author
    #       includeTimestamp: true # Include sync timestamp
    #       includeSourceLink: true # Include link to original comment
    #       format: "quoted" # quoted | inline | minimal
    #     handleUpdates: true # Sync comment updates/edits
    #     preserveFormatting: true # Preserve markdown formatting
    #     syncReplies: true # Sync comment threads and replies

    # issues:
    #   enabled: true # UNCOMMENT TO ENABLE - can be very noisy
    #   # Labels: Automatically syncs all original labels + adds 'synced' label
    #   comments: # Enhanced comment synchronization
    #     enabled: false # Enable to sync issue comments with attribution
    #     attribution:
    #       includeTimestamp: true # Include sync timestamp
    #       includeSourceLink: true # Include link to original comment
    #       format: "quoted" # quoted | inline | minimal
    #     handleUpdates: true # Sync comment updates/edits
    #     preserveFormatting: true # Preserve markdown formatting
    #     syncReplies: true # Sync comment threads and replies
# Alternative label configurations:
#
# Single label as string:
# labels: "synced"
#
# Multiple labels as array (recommended):
# labels: ["synced", "automated", "cross-platform"]
#
# No labels:
# labels: []

# Branch pattern examples:
# pattern: "*"           # All branches
# pattern: "main"        # Only main branch
# pattern: "feature/*"   # All feature branches
# pattern: "release/*"   # All release branches

# Timeline Merging Strategies:
# - merge-timelines: Creates merge commits to unify divergent histories (recommended)
# - skip-diverged: Only syncs commits that exist on both sides
# - force-match: Forces one repository to match the other exactly (destructive)

# Release Sync Strategies:
# divergentCommitStrategy (for all releases):
# - skip: Skip releases pointing to commits that don't exist in target (default)
# - create-anyway: Create releases even if commit doesn't exist in target
#
# latestReleaseStrategy (for latest release only):
# - point-to-latest: Point latest release to latest commit in target (default)
# - skip: Skip latest release if commit doesn't exist
# - create-anyway: Create latest release even if commit doesn't exist
#
# Tag Sync Strategies:
# divergentCommitStrategy (for all tags):
# - skip: Skip tags pointing to commits that don't exist in target (default)
# - create-anyway: Create tags even if commit doesn't exist in target

# Performance considerations:
# - Use specific branch patterns instead of "*" if you have many branches
# - Consider disabling releases/tags sync if not needed
# - The action runs operations in parallel for better performance

# ========================================
# ENHANCED COMMENT SYNCHRONIZATION EXAMPLE
# ========================================
# Uncomment and modify the sections below to enable comment synchronization
# with proper attribution and formatting preservation.

# gitlab:
#   sync:
#     issues:
#       comments:
#         enabled: true # Enable comment synchronization
#         attribution:
#           includeAuthor: true # Show original comment author
#           includeTimestamp: true # Show when comment was synced
#           includeSourceLink: true # Link back to original comment
#           format: "quoted" # quoted | inline | minimal
#         handleUpdates: true # Sync comment edits and updates
#         preserveFormatting: true # Keep markdown formatting intact
#         syncReplies: true # Include comment threads and replies
#
#     pullRequests:
#       comments:
#         enabled: true # Enable PR comment synchronization
#         attribution:
#           format: "inline" # Use inline format for PRs
#           includeAuthor: true
#           includeTimestamp: true
#           includeSourceLink: true
#         handleUpdates: true
#         preserveFormatting: true
#         syncReplies: true

# github:
#   sync:
#     issues:
#       comments:
#         enabled: true # Enable comment synchronization from GitLab
#         attribution:
#           format: "quoted" # Use quoted format for clear attribution
#           includeAuthor: true
#           includeTimestamp: true
#           includeSourceLink: true
#         handleUpdates: true
#         preserveFormatting: true
#         syncReplies: true
#
#     pullRequests:
#       comments:
#         enabled: true
#         attribution:
#           format: "inline"
#           includeAuthor: true
#           includeTimestamp: true
#           includeSourceLink: true
#         handleUpdates: true
#         preserveFormatting: true
#         syncReplies: true

# Comment Attribution Format Examples:
#
# QUOTED FORMAT (Default):
# **üí¨ Comment by @username on GitHub** ([original](https://github.com/user/repo/issues/123#issuecomment-456))
#
# > This is the original comment content that would be quoted
# > and properly attributed to maintain discussion context.
#
# ---
# *Synced from GitHub on 2024-01-15*
#
# INLINE FORMAT:
# **@username** (GitHub): [üîó](https://github.com/user/repo/issues/123#issuecomment-456) This is the comment content.
#
# MINIMAL FORMAT:
# This is the comment content with minimal attribution. ‚Äî @username
